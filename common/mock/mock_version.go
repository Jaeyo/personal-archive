// Code generated by MockGen. DO NOT EDIT.
// Source: version.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockVersionReader is a mock of VersionReader interface.
type MockVersionReader struct {
	ctrl     *gomock.Controller
	recorder *MockVersionReaderMockRecorder
}

// MockVersionReaderMockRecorder is the mock recorder for MockVersionReader.
type MockVersionReaderMockRecorder struct {
	mock *MockVersionReader
}

// NewMockVersionReader creates a new mock instance.
func NewMockVersionReader(ctrl *gomock.Controller) *MockVersionReader {
	mock := &MockVersionReader{ctrl: ctrl}
	mock.recorder = &MockVersionReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVersionReader) EXPECT() *MockVersionReaderMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockVersionReader) Read() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockVersionReaderMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockVersionReader)(nil).Read))
}
